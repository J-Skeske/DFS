
==================== FINAL INTERFACE ====================
2016-12-12 15:39:59.866005 UTC

interface use-haskell-0.1.0.0-F7dNwkeuN8BHaJ7CGjyfo9:RestClient [family instance module] 800120161117
  interface hash: 843389dd7d9136d65be49f75eee2bbc0
  ABI hash: 4fa08144e149affe0ff9cab715250cda
  export-list hash: 25da1f6e15fb8e85632e46dcfd0cb1d0
  orphan hash: fbac50f33eefc7302b085b403855441b
  flag hash: 77f9da4ac9c21b40d9244659c6107eb8
  sig of: Nothing
  used TH splices: False
  where
exports:
  RestClient.getPackages
  RestClient.getUser
  RestClient.getUsers
  RestClient.hackageAPI
  RestClient.Group
  RestClient.HackageAPI
  RestClient.Package{RestClient.Package packageName}
  RestClient.UserDetailed{RestClient.UserDetailed groups userid username}
  RestClient.UserSummary{RestClient.UserSummary summaryUserid summaryUsername}
  RestClient.Username
module dependencies:
package dependencies: aeson-1.0.2.1@aeson-1.0.2.1-GfuLqlylFao3EnSDkWlKm
                      array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-IJTZfiKZUT1KNfuPY97vfC
                      base-4.9.1.0
                      base-compat-0.9.1@base-compat-0.9.1-KPO0wrcls7g8nlFRpk0igo
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-4O9TExPPz6eI82Yj7L4SIj
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-CGB8BvrFgghHy5bLy0SFOg
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.7@case-insensitive-1.2.0.7-I1ltE0BTdb3Isy5PokY6q3
                      containers-0.5.7.1@containers-0.5.7.1
                      cookie-0.4.2.1@cookie-0.4.2.1-K68NuFIZ07nEstxwB6c3aL
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-GsXqKN6o1X9jr0fF5qCVD
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      ghc-boot-th-8.0.1.20161117@ghc-boot-th-8.0.1.20161117
                      ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-BwWHFlhAIB2IIZ8I8lJpMY
                      http-api-data-0.3.3@http-api-data-0.3.3-FFDcUXaYLpKFohsuWJOHEn
                      http-client-0.5.4@http-client-0.5.4-Ew7NzaTzuBFKkCPFhmG7iU
                      http-media-0.6.4@http-media-0.6.4-1pYALpSVkDO80IXCUdgfYv
                      http-types-0.9.1@http-types-0.9.1-HVfzlb08BVRGNzZVhxb460
                      integer-gmp-1.0.0.1 mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      network-2.6.3.1@network-2.6.3.1-eBUbCRLoNdCcgLQkD2Je6
                      network-uri-2.6.1.0@network-uri-2.6.1.0-EwGrJ9bdUqR1E7dAIJ4cwF
                      parsec-3.1.11@parsec-3.1.11-113irVHGgd88sRnywByDNw
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      safe-0.3.10@safe-0.3.10-2JDkZ3cOhkm66G5yxf9HAh
                      scientific-0.3.4.9@scientific-0.3.4.9-L97YykcISDXLPkZnAK8kDp
                      servant-0.9.1.1@servant-0.9.1.1-5tegzBqFyXpHupdJeTBSXf
                      servant-client-0.9.1.1@servant-client-0.9.1.1-87TAIQnK0Em3YuuBk86WbN
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      streaming-commons-0.1.16@streaming-commons-0.1.16-A7tN0UOdNLVGPsdpoUijj2
                      string-conversions-0.4@string-conversions-0.4-yO0KSto4bC9GNbfLeQcj4
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      template-haskell-2.11.1.0
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      transformers-0.5.2.0@transformers-0.5.2.0
                      unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-B5WkWtBRvdn7D9lHSwojKc
                      uri-bytestring-0.2.2.1@uri-bytestring-0.2.2.1-HrBdPlwpUdMJAtjM4WzZWH
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-1DpjxLeTvGg7ttZZojxJR5
                      uuid-types-1.0.3@uuid-types-1.0.3-3UDj14qx53qB7mZoQOBBEU
                      vault-0.3.0.6@vault-0.3.0.6-BESLi402zPU3c0rjCI56vD
                      vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG
                      zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-IJTZfiKZUT1KNfuPY97vfC:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-IJTZfiKZUT1KNfuPY97vfC:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-BwWHFlhAIB2IIZ8I8lJpMY:Data.Hashable.Generic
         http-client-0.5.4@http-client-0.5.4-Ew7NzaTzuBFKkCPFhmG7iU:Network.HTTP.Client.Request
         network-2.6.3.1@network-2.6.3.1-eBUbCRLoNdCcgLQkD2Je6:Network.Socket
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-IJTZfiKZUT1KNfuPY97vfC:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD:Data.DList
                         ghc-boot-th-8.0.1.20161117@ghc-boot-th-8.0.1.20161117:GHC.LanguageExtensions.Type
                         http-api-data-0.3.3@http-api-data-0.3.3-FFDcUXaYLpKFohsuWJOHEn:Web.Internal.FormUrlEncoded
                         http-client-0.5.4@http-client-0.5.4-Ew7NzaTzuBFKkCPFhmG7iU:Network.HTTP.Client
                         network-uri-2.6.1.0@network-uri-2.6.1.0-EwGrJ9bdUqR1E7dAIJ4cwF:Network.URI
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         servant-0.9.1.1@servant-0.9.1.1-5tegzBqFyXpHupdJeTBSXf:Servant.API.ContentTypes
                         servant-0.9.1.1@servant-0.9.1.1-5tegzBqFyXpHupdJeTBSXf:Servant.API.IsSecure
                         servant-0.9.1.1@servant-0.9.1.1-5tegzBqFyXpHupdJeTBSXf:Servant.API.Verbs
                         servant-0.9.1.1@servant-0.9.1.1-5tegzBqFyXpHupdJeTBSXf:Servant.Utils.Links
                         servant-client-0.9.1.1@servant-client-0.9.1.1-87TAIQnK0Em3YuuBk86WbN:Servant.Client
                         servant-client-0.9.1.1@servant-client-0.9.1.1-87TAIQnK0Em3YuuBk86WbN:Servant.Common.BaseUrl
                         servant-client-0.9.1.1@servant-client-0.9.1.1-87TAIQnK0Em3YuuBk86WbN:Servant.Common.Req
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-B5WkWtBRvdn7D9lHSwojKc:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-B5WkWtBRvdn7D9lHSwojKc:Data.HashSet
                         uri-bytestring-0.2.2.1@uri-bytestring-0.2.2.1-HrBdPlwpUdMJAtjM4WzZWH:URI.ByteString.Types
                         uuid-types-1.0.3@uuid-types-1.0.3-3UDj14qx53qB7mZoQOBBEU:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-3UDj14qx53qB7mZoQOBBEU:Data.UUID.Types.Internal.Builder
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed.Base
                         zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp:Codec.Compression.Zlib.Stream
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-GfuLqlylFao3EnSDkWlKm:Data.Aeson 6b2793890320cb248c8230c1436dc263
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-GfuLqlylFao3EnSDkWlKm:Data.Aeson.Types.FromJSON 384033c22267c4d675ef0cc99761b27b
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-GfuLqlylFao3EnSDkWlKm:Data.Aeson.Types.Internal 60c7eef2b47b381e2ca1460cd7d76da5
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Data.Functor 5ab1dc703df5b482e77efb697833ca3c
import  -/  base-4.9.1.0:Data.Proxy d7f87a37cf7ec5ca87c59c8d2859031f
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Generics 1dbec2bc7dd1c5bd8c89ed857eaed19b
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  http-client-0.5.4@http-client-0.5.4-Ew7NzaTzuBFKkCPFhmG7iU:Network.HTTP.Client da98229a3e661d6d3fdd081c228244de
import  -/  servant-0.9.1.1@servant-0.9.1.1-5tegzBqFyXpHupdJeTBSXf:Servant.API 8ad55e30346a4bfb58903e0fee955286
import  -/  servant-0.9.1.1@servant-0.9.1.1-5tegzBqFyXpHupdJeTBSXf:Servant.API.Alternative d8e98ec1ce8cc15b057856b3329ad97e
import  -/  servant-0.9.1.1@servant-0.9.1.1-5tegzBqFyXpHupdJeTBSXf:Servant.API.Capture d6af4e7c03317275165ed815b428969f
import  -/  servant-0.9.1.1@servant-0.9.1.1-5tegzBqFyXpHupdJeTBSXf:Servant.API.ContentTypes cd9af704ec1132acc05f22c1e7506b97
import  -/  servant-0.9.1.1@servant-0.9.1.1-5tegzBqFyXpHupdJeTBSXf:Servant.API.Sub 29c434c76771c9fb99877e4524d92d3f
import  -/  servant-0.9.1.1@servant-0.9.1.1-5tegzBqFyXpHupdJeTBSXf:Servant.API.Verbs 5862a87569d08b1a695f7edbcd61561e
import  -/  servant-client-0.9.1.1@servant-client-0.9.1.1-87TAIQnK0Em3YuuBk86WbN:Servant.Client 32cfafc8d588838ce71c4ad4274808d0
import  -/  servant-client-0.9.1.1@servant-client-0.9.1.1-87TAIQnK0Em3YuuBk86WbN:Servant.Common.Req a1e9f27cedcfd84ed4870eadf9d8dab8
import  -/  text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text 74d2e27a47a6c0a5519f61d8641aebe2
import  -/  text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Internal a2f6f66c5bb1247458d9fa25257ab188
e5507eb5850345f16e0000d9f3206626
  $fEqPackage :: GHC.Classes.Eq RestClient.Package
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ RestClient.Package
                  RestClient.$fEqPackage_$c==
                  RestClient.$fEqPackage_$c/= -}
e5507eb5850345f16e0000d9f3206626
  $fEqPackage_$c/= ::
    RestClient.Package -> RestClient.Package -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLS)),1*U(1*U(U,U,U))><S(S(LLS)),1*U(1*U(U,U,U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: RestClient.Package) (w1 :: RestClient.Package) ->
                 case w of ww { RestClient.Package ww1 ->
                 case ww1 of ww2 { Data.Text.Internal.Text ww3 ww4 ww5 ->
                 case w1 of ww6 { RestClient.Package ww7 ->
                 case ww7 of ww8 { Data.Text.Internal.Text ww9 ww10 ww11 ->
                 RestClient.$w$c/= ww3 ww4 ww5 ww9 ww10 ww11 } } } }) -}
e5507eb5850345f16e0000d9f3206626
  $fEqPackage_$c== ::
    RestClient.Package -> RestClient.Package -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLS)),1*U(1*U(U,U,U))><S(S(LLS)),1*U(1*U(U,U,U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: RestClient.Package) (ds1 :: RestClient.Package) ->
                 case ds of wild { RestClient.Package a1 ->
                 case ds1 of wild1 { RestClient.Package b1 ->
                 Data.Text.$fEqText_$c== a1 b1 } }) -}
ffdf3129e7891a5e11f78e12ec90881c
  $fEqUserDetailed :: GHC.Classes.Eq RestClient.UserDetailed
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ RestClient.UserDetailed
                  RestClient.$fEqUserDetailed_$c==
                  RestClient.$fEqUserDetailed_$c/= -}
ffdf3129e7891a5e11f78e12ec90881c
  $fEqUserDetailed_$c/= ::
    RestClient.UserDetailed
    -> RestClient.UserDetailed -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLS)LL),1*U(1*U(U,U,U),1*U(U),1*U)><S(S(LLS)LL),1*U(1*U(U,U,U),1*U(U),1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: RestClient.UserDetailed) (b :: RestClient.UserDetailed) ->
                 case RestClient.$fEqUserDetailed_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
ffdf3129e7891a5e11f78e12ec90881c
  $fEqUserDetailed_$c== ::
    RestClient.UserDetailed
    -> RestClient.UserDetailed -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLS)LL),1*U(1*U(U,U,U),1*U(U),1*U)><S(S(LLS)LL),1*U(1*U(U,U,U),1*U(U),1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: RestClient.UserDetailed)
                   (w1 :: RestClient.UserDetailed) ->
                 case w of ww { RestClient.UserDetailed ww1 ww2 ww3 ->
                 case ww1 of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                 case w1 of ww8 { RestClient.UserDetailed ww9 ww10 ww11 ->
                 case ww9 of ww12 { Data.Text.Internal.Text ww13 ww14 ww15 ->
                 RestClient.$w$c==
                   ww5
                   ww6
                   ww7
                   ww2
                   ww3
                   ww13
                   ww14
                   ww15
                   ww10
                   ww11 } } } }) -}
7516e401abca7dcadd4806e8af9c4fa2
  $fEqUserSummary :: GHC.Classes.Eq RestClient.UserSummary
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ RestClient.UserSummary
                  RestClient.$fEqUserSummary_$c==
                  RestClient.$fEqUserSummary_$c/= -}
7516e401abca7dcadd4806e8af9c4fa2
  $fEqUserSummary_$c/= ::
    RestClient.UserSummary -> RestClient.UserSummary -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLS)L),1*U(1*U(U,U,U),1*U(U))><S(S(LLS)L),1*U(1*U(U,U,U),1*U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: RestClient.UserSummary) (b :: RestClient.UserSummary) ->
                 case RestClient.$fEqUserSummary_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
7516e401abca7dcadd4806e8af9c4fa2
  $fEqUserSummary_$c== ::
    RestClient.UserSummary -> RestClient.UserSummary -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLS)L),1*U(1*U(U,U,U),1*U(U))><S(S(LLS)L),1*U(1*U(U,U,U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: RestClient.UserSummary) (w1 :: RestClient.UserSummary) ->
                 case w of ww { RestClient.UserSummary ww1 ww2 ->
                 case ww1 of ww3 { Data.Text.Internal.Text ww4 ww5 ww6 ->
                 case w1 of ww7 { RestClient.UserSummary ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 RestClient.$w$c==1 ww4 ww5 ww6 ww2 ww11 ww12 ww13 ww9 } } } }) -}
e5507eb5850345f16e0000d9f3206626
  $fFromJSONPackage ::
    Data.Aeson.Types.FromJSON.FromJSON RestClient.Package
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ RestClient.Package
                  RestClient.$fFromJSONPackage_$cparseJSON
                  RestClient.$fFromJSONPackage_$cparseJSONList -}
e5507eb5850345f16e0000d9f3206626
  $fFromJSONPackage1 ::
    [Data.Aeson.Types.Internal.Parser RestClient.Package]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [RestClient.Package] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
fa7232150753f1dfe1615f061263da63
  $fFromJSONPackage2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "[a]"#) -}
d29edd7bd1f9c5585a296ef307a55dca
  $fFromJSONPackage3 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            ('GHC.Generics.MetaData
               "Package"
               "RestClient"
               "use-haskell-0.1.0.0-F7dNwkeuN8BHaJ7CGjyfo9"
               'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "Package" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "packageName")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 Data.Text.Internal.Text)))
            a1)
  {- Arity: 3, Strictness: <L,1*U(U,U,U,U,U,U)><L,U><L,U>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a1)
                   (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "packageName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 Data.Text.Internal.Text)
                             a1)
                   = case opts of wild { Data.Aeson.Types.Internal.Options ds1 ds2 ds3 ds4 ds5 ds6 ->
                     case ds6 of wild1 {
                       GHC.Types.False
                       -> case x of wild2 {
                            DEFAULT
                            -> Data.Aeson.Types.FromJSON.typeMismatch
                                 @ (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "packageName")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                      a1)
                                 Data.Aeson.Types.FromJSON.$fConsFromJSON'TYPEarityfTrue1
                                 wild2
                            Data.Aeson.Types.Internal.Object obj
                            -> Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                 @ ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "packageName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                 @ Data.Aeson.Types.Generic.Zero
                                 @ (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                                 RestClient.$fFromJSONPackage_$s$fSelectorMetaMetaSel
                                 RestClient.$fFromJSONPackage4
                                   `cast`
                                 (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                           <Data.Aeson.Types.Generic.Zero>_N
                                           <GHC.Generics.K1
                                              GHC.Generics.R Data.Text.Internal.Text>_N))
                                 @ a1
                                 wild
                                 fargs
                                 (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                 obj }
                       GHC.Types.True
                       -> case Data.Aeson.Types.Internal.$sfromList1
                                 @ Data.Aeson.Types.Internal.Value
                                 (GHC.Types.:
                                    @ Data.Aeson.Types.Internal.Pair
                                    (Data.Aeson.Types.FromJSON.$fConsFromJSONarityf2, x)
                                    (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                                 (Data.HashMap.Base.Empty
                                    @ Data.Text.Internal.Text
                                    @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                          Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                            @ ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "packageName")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                            @ Data.Aeson.Types.Generic.Zero
                            @ (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text)
                            RestClient.$fFromJSONPackage_$s$fSelectorMetaMetaSel
                            RestClient.$fFromJSONPackage4
                              `cast`
                            (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                      <Data.Aeson.Types.Generic.Zero>_N
                                      <GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text>_N))
                            @ a1
                            wild
                            fargs
                            Data.Aeson.Types.FromJSON.$fConsFromJSONarityf1
                            dt } } }
                 } in
                 (\ @ (f5 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f5 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.M1
                                GHC.Generics.D
                                ('GHC.Generics.MetaData
                                   "Package"
                                   "RestClient"
                                   "use-haskell-0.1.0.0-F7dNwkeuN8BHaJ7CGjyfo9"
                                   'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "Package" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "packageName")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 Data.Text.Internal.Text)))
                                a1)
                             f5
                             r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <GHC.Generics.M1
                          GHC.Generics.S
                          ('GHC.Generics.MetaSel
                             ('GHC.Base.Just "packageName")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                          (GHC.Generics.Rec0 Data.Text.Internal.Text)
                          a1>_R)
                    @ f5
                    @ r
                    path
                    kf
                    (\ (a2 :: GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "packageName")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 Data.Text.Internal.Text)
                                a1) ->
                     ks
                       a2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.C>_P
                                      <'GHC.Generics.MetaCons
                                         "Package" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "packageName")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 Data.Text.Internal.Text)>_R))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "Package"
                                         "RestClient"
                                         "use-haskell-0.1.0.0-F7dNwkeuN8BHaJ7CGjyfo9"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Package" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "packageName")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0
                                               Data.Text.Internal.Text))>_R)) <a1>_N)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.M1
                              GHC.Generics.D
                              ('GHC.Generics.MetaData
                                 "Package"
                                 "RestClient"
                                 "use-haskell-0.1.0.0-F7dNwkeuN8BHaJ7CGjyfo9"
                                 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "Package" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "packageName")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 Data.Text.Internal.Text)))
                              a1>_R))) -}
e0edf78fd49aebbae9d6748a937d6371
  $fFromJSONPackage4 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ Data.Text.Internal.Text
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   Data.Aeson.Types.FromJSON.$fFromJSONText0
                   @ a1
                   w3) -}
2090cc7eed71339d43cf85e3b69213ef
  $fFromJSONPackage5 ::
    GHC.Generics.SingI ('GHC.Base.Just "packageName")
  {- Unfolding: InlineRule (0, True, True)
                RestClient.$fFromJSONPackage6
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "packageName">_N) -}
5116a74e6038fdcdf9d27613de962f9f
  $fFromJSONPackage6 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "packageName")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "packageName")
                   @ "packageName"
                   @~ <'GHC.Base.Just "packageName">_N
                   RestClient.$fFromJSONPackage7
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"packageName">_N)) -}
5e30bd9ecd25ad9c82e3715102d94383
  $fFromJSONPackage7 :: GHC.Generics.R:SingSymbols "packageName"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "packageName"
                   RestClient.$fFromJSONPackage8
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"packageName">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"packageName">_N))) -}
e408df2b0ca4a97e39887cd18e53661c
  $fFromJSONPackage8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "packageName"#) -}
e5507eb5850345f16e0000d9f3206626
  $fFromJSONPackage_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser RestClient.Package
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData
                                "Package"
                                "RestClient"
                                "use-haskell-0.1.0.0-F7dNwkeuN8BHaJ7CGjyfo9"
                                'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Package" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "packageName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 Data.Text.Internal.Text)))
                             GHC.Prim.Any)
                   = RestClient.$fFromJSONPackage3
                       @ GHC.Prim.Any
                       Data.Aeson.Types.Internal.defaultOptions
                       (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Prim.Any)
                       x
                 } in
                 (\ @ (f5 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f5 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             RestClient.Package f5 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       (Sub (Sym (RestClient.Rep_Package[0])) <GHC.Prim.Any>_N))
                    @ f5
                    @ r
                    path
                    kf
                    (\ (a1 :: GHC.Generics.Rep RestClient.Package GHC.Prim.Any) ->
                     ks
                       (RestClient.Package
                          a1
                            `cast`
                          (Trans
                               (Trans
                                    (Sub (RestClient.Rep_Package[0]))
                                    (Trans
                                         (GHC.Generics.N:M1[0]
                                              <GHC.Generics.D>_P
                                              <'GHC.Generics.MetaData
                                                 "Package"
                                                 "RestClient"
                                                 "use-haskell-0.1.0.0-F7dNwkeuN8BHaJ7CGjyfo9"
                                                 'GHC.Types.False>_P
                                              <GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "Package" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                                 (GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "packageName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R Data.Text.Internal.Text))>_R)
                                         (Trans
                                              (GHC.Generics.N:M1[0]
                                                   <GHC.Generics.C>_P
                                                   <'GHC.Generics.MetaCons
                                                      "Package"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.True>_P
                                                   <GHC.Generics.M1
                                                      GHC.Generics.S
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "packageName")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.K1
                                                         GHC.Generics.R Data.Text.Internal.Text)>_R)
                                              (GHC.Generics.N:M1[0]
                                                   <GHC.Generics.S>_P
                                                   <'GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "packageName")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy>_P
                                                   <GHC.Generics.K1
                                                      GHC.Generics.R
                                                      Data.Text.Internal.Text>_R))) <GHC.Prim.Any>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P
                                    <Data.Text.Internal.Text>_R
                                    <GHC.Prim.Any>_P)))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <RestClient.Package>_R))) -}
e5507eb5850345f16e0000d9f3206626
  $fFromJSONPackage_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [RestClient.Package]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [RestClient.Package]
                        RestClient.$fFromJSONPackage2
                        wild
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (RestClient.$fFromJSONPackage1
                         (letrec {
                            $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds2 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          RestClient.$fFromJSONPackage_go 0# ($wgo 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[RestClient.Package]>_R)) } }) -}
e770c67ffe9881da0d7ffb6e1b26a3be
  $fFromJSONPackage_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "packageName")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "packageName")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  RestClient.$fFromJSONPackage_$s$fSelectorMetaMetaSel_$cselName
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "packageName")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     RestClient.$fFromJSONPackage5
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "packageName")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     RestClient.$fFromJSONPackage5
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "packageName")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     RestClient.$fFromJSONPackage5
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
f393e36e783620699e798b9cfccc995b
  $fFromJSONPackage_$s$fSelectorMetaMetaSel_$cselName ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "packageName")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "packageName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 RestClient.$fFromJSONPackage8) -}
e5507eb5850345f16e0000d9f3206626
  $fFromJSONPackage_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser RestClient.Package]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
ffdf3129e7891a5e11f78e12ec90881c
  $fFromJSONUserDetailed ::
    Data.Aeson.Types.FromJSON.FromJSON RestClient.UserDetailed
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ RestClient.UserDetailed
                  RestClient.$fFromJSONUserDetailed_$cparseJSON
                  RestClient.$fFromJSONUserDetailed_$cparseJSONList -}
ffdf3129e7891a5e11f78e12ec90881c
  $fFromJSONUserDetailed1 ::
    [Data.Aeson.Types.Internal.Parser RestClient.UserDetailed]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [RestClient.UserDetailed] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
b41978c814d8a591bb782d6199e4211a
  $fFromJSONUserDetailed10 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "userid")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "userid")
                   @ "userid"
                   @~ <'GHC.Base.Just "userid">_N
                   RestClient.$fFromJSONUserDetailed11
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"userid">_N)) -}
8e2fc64c0c6dc61cb6650133e061670f
  $fFromJSONUserDetailed11 :: GHC.Generics.R:SingSymbols "userid"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "userid"
                   RestClient.$fFromJSONUserDetailed12
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"userid">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"userid">_N))) -}
4d792e1ed097fafd1195e59e397c1ca8
  $fFromJSONUserDetailed12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "userid"#) -}
5b1e8889e912246657138cec0d959dfa
  $fFromJSONUserDetailed13 ::
    GHC.Generics.SingI ('GHC.Base.Just "username")
  {- Unfolding: InlineRule (0, True, True)
                RestClient.$fFromJSONUserDetailed14
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "username">_N) -}
1e0b4e104ba15c25b6ba1d04df5de7ce
  $fFromJSONUserDetailed14 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "username")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "username")
                   @ "username"
                   @~ <'GHC.Base.Just "username">_N
                   RestClient.$fFromJSONUserDetailed15
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"username">_N)) -}
9654417cc4ed23294d1b8b1a20c9d475
  $fFromJSONUserDetailed15 :: GHC.Generics.R:SingSymbols "username"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "username"
                   RestClient.$fFromJSONUserDetailed16
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"username">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"username">_N))) -}
69922f79d999b285708affefee96c4ce
  $fFromJSONUserDetailed16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "username"#) -}
9f855707b1038a1f708a71cf11090693
  $fFromJSONUserDetailed2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            ('GHC.Generics.MetaData
               "UserDetailed"
               "RestClient"
               "use-haskell-0.1.0.0-F7dNwkeuN8BHaJ7CGjyfo9"
               'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "UserDetailed" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "username")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 RestClient.Username)
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "userid")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Types.Int)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "groups")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 [RestClient.Group]))))
            a1)
  {- Arity: 3, Strictness: <L,1*U(U,U,U,U,U,U)><L,U><L,1*U>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a1)
                   (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "username")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 RestClient.Username))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "userid")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Types.Int)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "groups")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 [RestClient.Group]))
                             a1)
                   = case opts of wild { Data.Aeson.Types.Internal.Options ds1 ds2 ds3 ds4 ds5 ds6 ->
                     case ds6 of wild1 { DEFAULT ->
                     case x of wild2 {
                       DEFAULT
                       -> Data.Aeson.Types.FromJSON.typeMismatch
                            @ ((GHC.Generics.:*:)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "username")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 RestClient.Username))
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "userid")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Types.Int)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "groups")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 [RestClient.Group]))
                                 a1)
                            Data.Aeson.Types.FromJSON.$fConsFromJSON'TYPEarityfTrue1
                            wild2
                       Data.Aeson.Types.Internal.Object obj
                       -> let {
                            m1 :: Data.Aeson.Types.Internal.Parser
                                    (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "username")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 RestClient.Username)
                                       a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "username")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R RestClient.Username)
                                RestClient.$fFromJSONUserDetailed_$s$fSelectorMetaMetaSel2
                                RestClient.$fFromJSONPackage4
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1
                                             GHC.Generics.R Data.Text.Internal.Text>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          let {
                            m2 :: Data.Aeson.Types.Internal.Parser
                                    (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "userid")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Types.Int)
                                       a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "userid")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                RestClient.$fFromJSONUserDetailed_$s$fSelectorMetaMetaSel1
                                RestClient.$fFromJSONUserDetailed8
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          let {
                            e :: Data.Aeson.Types.Internal.Parser
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "groups")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 [RestClient.Group])
                                      a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "groups")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R [RestClient.Group])
                                RestClient.$fFromJSONUserDetailed_$s$fSelectorMetaMetaSel
                                RestClient.$fFromJSONUserDetailed3
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R [RestClient.Group]>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          (\ @ (f :: * -> *)
                             @ r
                             (path :: Data.Aeson.Types.Internal.JSONPath)
                             (kf :: Data.Aeson.Types.Internal.Failure f r)
                             (ks :: Data.Aeson.Types.Internal.Success
                                      ((GHC.Generics.:*:)
                                         (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "username")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 RestClient.Username))
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "userid")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Types.Int)
                                          GHC.Generics.:*: GHC.Generics.S1
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "groups")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.Rec0 [RestClient.Group]))
                                         a1)
                                      f
                                      r) ->
                           m1
                             `cast`
                           (Data.Aeson.Types.Internal.N:Parser[0]
                                <GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "username")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 RestClient.Username)
                                   a1>_R)
                             @ f
                             @ r
                             path
                             kf
                             (\ (a2 :: GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "username")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 RestClient.Username)
                                         a1) ->
                              m2
                                `cast`
                              (Data.Aeson.Types.Internal.N:Parser[0]
                                   <GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "userid")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Types.Int)
                                      a1>_R)
                                @ f
                                @ r
                                path
                                kf
                                (\ (a4 :: GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "userid")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Types.Int)
                                            a1) ->
                                 e `cast`
                                 (Data.Aeson.Types.Internal.N:Parser[0]
                                      <GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "groups")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 [RestClient.Group])
                                         a1>_R)
                                   @ f
                                   @ r
                                   path
                                   kf
                                   (\ (a3 :: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "groups")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.Rec0 [RestClient.Group])
                                               a1) ->
                                    ks
                                      (GHC.Generics.:*:
                                         @ (GHC.Generics.M1
                                              GHC.Generics.S
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "username")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 RestClient.Username))
                                         @ (GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "userid")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Types.Int)
                                            GHC.Generics.:*: GHC.Generics.S1
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "groups")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.Rec0
                                                                  [RestClient.Group]))
                                         @ a1
                                         a2
                                         (GHC.Generics.:*:
                                            @ (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "userid")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Types.Int))
                                            @ (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "groups")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 [RestClient.Group]))
                                            @ a1
                                            a4
                                            a3))))))
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <(GHC.Generics.:*:)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "username")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 RestClient.Username))
                                       (GHC.Generics.S1
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "userid")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.Types.Int)
                                        GHC.Generics.:*: GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "groups")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0 [RestClient.Group]))
                                       a1>_R)) } } }
                 } in
                 (\ @ (f5 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f5 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.M1
                                GHC.Generics.D
                                ('GHC.Generics.MetaData
                                   "UserDetailed"
                                   "RestClient"
                                   "use-haskell-0.1.0.0-F7dNwkeuN8BHaJ7CGjyfo9"
                                   'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "UserDetailed" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "username")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 RestClient.Username)
                                    GHC.Generics.:*: (GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "userid")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Types.Int)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "groups")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            [RestClient.Group]))))
                                a1)
                             f5
                             r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <(GHC.Generics.:*:)
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "username")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 RestClient.Username))
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "userid")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Types.Int)
                           GHC.Generics.:*: GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "groups")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 [RestClient.Group]))
                          a1>_R)
                    @ f5
                    @ r
                    path
                    kf
                    (\ (a2 :: (GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "username")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 RestClient.Username))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "userid")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int)
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "groups")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 [RestClient.Group]))
                                a1) ->
                     ks
                       a2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.C>_P
                                      <'GHC.Generics.MetaCons
                                         "UserDetailed" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                      <GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "username")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 RestClient.Username)
                                       GHC.Generics.:*: (GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "userid")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0 GHC.Types.Int)
                                                         GHC.Generics.:*: GHC.Generics.S1
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "groups")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.Rec0
                                                                               [RestClient.Group]))>_R))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "UserDetailed"
                                         "RestClient"
                                         "use-haskell-0.1.0.0-F7dNwkeuN8BHaJ7CGjyfo9"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "UserDetailed" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "username")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 RestClient.Username)
                                          GHC.Generics.:*: (GHC.Generics.S1
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "userid")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.Rec0 GHC.Types.Int)
                                                            GHC.Generics.:*: GHC.Generics.S1
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "groups")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.Rec0
                                                                                  [RestClient.Group])))>_R)) <a1>_N)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.M1
                              GHC.Generics.D
                              ('GHC.Generics.MetaData
                                 "UserDetailed"
                                 "RestClient"
                                 "use-haskell-0.1.0.0-F7dNwkeuN8BHaJ7CGjyfo9"
                                 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "UserDetailed" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "username")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 RestClient.Username)
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "userid")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Types.Int)
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just "groups")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          [RestClient.Group]))))
                              a1>_R))) -}
fd88d4558cabc916b452febb5eabf7e5
  $fFromJSONUserDetailed3 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [RestClient.Group] a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ [RestClient.Group]
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   RestClient.$fFromJSONUserDetailed_$s$fFromJSON[]
                   @ a1
                   w3) -}
a7b7f62d0a9a78a076ae6d2fbb4f53fc
  $fFromJSONUserDetailed4 ::
    GHC.Generics.SingI ('GHC.Base.Just "groups")
  {- Unfolding: InlineRule (0, True, True)
                RestClient.$fFromJSONUserDetailed5
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "groups">_N) -}
e9174342d06433ffc2cbc9a21daefe6a
  $fFromJSONUserDetailed5 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "groups")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "groups")
                   @ "groups"
                   @~ <'GHC.Base.Just "groups">_N
                   RestClient.$fFromJSONUserDetailed6
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"groups">_N)) -}
f0276b5a6701abbdf4cc4457ebe27e02
  $fFromJSONUserDetailed6 :: GHC.Generics.R:SingSymbols "groups"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "groups"
                   RestClient.$fFromJSONUserDetailed7
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"groups">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"groups">_N))) -}
f9720a840f70ab2595e258200f626acc
  $fFromJSONUserDetailed7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "groups"#) -}
9dbf8c551d47d7dec52b5030b34cd43e
  $fFromJSONUserDetailed8 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ GHC.Types.Int
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   Data.Aeson.Types.FromJSON.$fFromJSONInt
                   @ a1
                   w3) -}
6b8661f5852556e6c4881ef82f73569f
  $fFromJSONUserDetailed9 ::
    GHC.Generics.SingI ('GHC.Base.Just "userid")
  {- Unfolding: InlineRule (0, True, True)
                RestClient.$fFromJSONUserDetailed10
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "userid">_N) -}
ffdf3129e7891a5e11f78e12ec90881c
  $fFromJSONUserDetailed_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser RestClient.UserDetailed
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData
                                "UserDetailed"
                                "RestClient"
                                "use-haskell-0.1.0.0-F7dNwkeuN8BHaJ7CGjyfo9"
                                'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "UserDetailed" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "username")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 RestClient.Username)
                                 GHC.Generics.:*: (GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "userid")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Types.Int)
                                                   GHC.Generics.:*: GHC.Generics.S1
                                                                      ('GHC.Generics.MetaSel
                                                                         ('GHC.Base.Just "groups")
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.Rec0
                                                                         [RestClient.Group]))))
                             GHC.Prim.Any)
                   = RestClient.$fFromJSONUserDetailed2
                       @ GHC.Prim.Any
                       Data.Aeson.Types.Internal.defaultOptions
                       (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Prim.Any)
                       x
                 } in
                 (\ @ (f5 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f5 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             RestClient.UserDetailed f5 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       (Sub (Sym (RestClient.Rep_UserDetailed[0])) <GHC.Prim.Any>_N))
                    @ f5
                    @ r
                    path
                    kf
                    (\ (a1 :: GHC.Generics.Rep RestClient.UserDetailed GHC.Prim.Any) ->
                     ks (RestClient.$fFromJSONUserDetailed_$cto @ GHC.Prim.Any a1)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <RestClient.UserDetailed>_R))) -}
ffdf3129e7891a5e11f78e12ec90881c
  $fFromJSONUserDetailed_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [RestClient.UserDetailed]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [RestClient.UserDetailed]
                        RestClient.$fFromJSONPackage2
                        wild
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (RestClient.$fFromJSONUserDetailed1
                         (letrec {
                            $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds2 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          RestClient.$fFromJSONUserDetailed_go 0# ($wgo 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[RestClient.UserDetailed]>_R)) } }) -}
ffdf3129e7891a5e11f78e12ec90881c
  $fFromJSONUserDetailed_$cto ::
    GHC.Generics.Rep RestClient.UserDetailed x
    -> RestClient.UserDetailed
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(U,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep RestClient.UserDetailed x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (RestClient.Rep_UserDetailed[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "UserDetailed"
                                        "RestClient"
                                        "use-haskell-0.1.0.0-F7dNwkeuN8BHaJ7CGjyfo9"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "UserDetailed" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "username")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R RestClient.Username)
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "userid")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R GHC.Types.Int)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "groups")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 [RestClient.Group])))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "UserDetailed" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "username")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R RestClient.Username)
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "userid")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R GHC.Types.Int)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Base.Just
                                                                                 "groups")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              [RestClient.Group]))>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds2 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 RestClient.UserDetailed
                   ds1
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "username")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R RestClient.Username>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <RestClient.Username>_R <x>_P))
                   ds3
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "userid")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R <x>_N)
                        (GHC.Generics.N:K1[0] <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P))
                   ds4
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "groups")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R [RestClient.Group]>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <[RestClient.Group]>_R <x>_P)) } }) -}
5fdb45ed4dd2acc7490a41f595bffc73
  $fFromJSONUserDetailed_$s$fFromJSON[] ::
    Data.Aeson.Types.FromJSON.FromJSON [Data.Text.Internal.Text]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [Data.Text.Internal.Text]
                  (Data.Aeson.Types.FromJSON.$dmfromJSONKeyList_$cparseJSON
                     @ Data.Text.Internal.Text
                     Data.Aeson.Types.FromJSON.$fFromJSONText0)
                  (Data.Aeson.Types.FromJSON.$fFromJSONKey[]_$cparseJSONList
                     @ Data.Text.Internal.Text
                     Data.Aeson.Types.FromJSON.$fFromJSONText0) -}
e9d7d978b3b004eb2499018a72c1ce2d
  $fFromJSONUserDetailed_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "groups")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "groups")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  RestClient.$fFromJSONUserDetailed_$s$fSelectorMetaMetaSel_$cselName
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "groups")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     RestClient.$fFromJSONUserDetailed4
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "groups")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     RestClient.$fFromJSONUserDetailed4
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "groups")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     RestClient.$fFromJSONUserDetailed4
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
fe9d884ac7a45e7ee11c973848a6ea82
  $fFromJSONUserDetailed_$s$fSelectorMetaMetaSel1 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "userid")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "userid")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  RestClient.$fFromJSONUserDetailed_$s$fSelectorMetaMetaSel_$cselName1
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "userid")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     RestClient.$fFromJSONUserDetailed9
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "userid")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     RestClient.$fFromJSONUserDetailed9
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "userid")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     RestClient.$fFromJSONUserDetailed9
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
ce9f3ac739f2ba6d20a32bef8ce63341
  $fFromJSONUserDetailed_$s$fSelectorMetaMetaSel2 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "username")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "username")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  RestClient.$fFromJSONUserDetailed_$s$fSelectorMetaMetaSel_$cselName2
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "username")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     RestClient.$fFromJSONUserDetailed13
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "username")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     RestClient.$fFromJSONUserDetailed13
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "username")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     RestClient.$fFromJSONUserDetailed13
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
b3c681c1ea651a71e1d99dfd92689b79
  $fFromJSONUserDetailed_$s$fSelectorMetaMetaSel_$cselName ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "groups")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "groups")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 RestClient.$fFromJSONUserDetailed7) -}
df83300cf003d6113cadb4a36ba5b3e5
  $fFromJSONUserDetailed_$s$fSelectorMetaMetaSel_$cselName1 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "userid")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "userid")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 RestClient.$fFromJSONUserDetailed12) -}
f9f51dac03c55798ffb1bf3a71647c7b
  $fFromJSONUserDetailed_$s$fSelectorMetaMetaSel_$cselName2 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "username")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "username")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 RestClient.$fFromJSONUserDetailed16) -}
ffdf3129e7891a5e11f78e12ec90881c
  $fFromJSONUserDetailed_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser RestClient.UserDetailed]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
7516e401abca7dcadd4806e8af9c4fa2
  $fFromJSONUserSummary ::
    Data.Aeson.Types.FromJSON.FromJSON RestClient.UserSummary
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ RestClient.UserSummary
                  RestClient.$fFromJSONUserSummary_$cparseJSON
                  RestClient.$fFromJSONUserSummary_$cparseJSONList -}
7516e401abca7dcadd4806e8af9c4fa2
  $fFromJSONUserSummary1 ::
    [Data.Aeson.Types.Internal.Parser RestClient.UserSummary]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [RestClient.UserSummary] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
7516e401abca7dcadd4806e8af9c4fa2
  $fFromJSONUserSummary_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser RestClient.UserSummary
  {- Arity: 1, Strictness: <S,1*U> -}
7516e401abca7dcadd4806e8af9c4fa2
  $fFromJSONUserSummary_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [RestClient.UserSummary]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [RestClient.UserSummary]
                        RestClient.$fFromJSONPackage2
                        wild
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (RestClient.$fFromJSONUserSummary1
                         (letrec {
                            $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds2 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          RestClient.$fFromJSONUserSummary_go 0# ($wgo 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[RestClient.UserSummary]>_R)) } }) -}
7516e401abca7dcadd4806e8af9c4fa2
  $fFromJSONUserSummary_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser RestClient.UserSummary]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
e5507eb5850345f16e0000d9f3206626
  $fGenericPackage :: GHC.Generics.Generic RestClient.Package
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ RestClient.Package
                  RestClient.$fGenericPackage_$cfrom
                  RestClient.$fGenericPackage_$cto -}
e5507eb5850345f16e0000d9f3206626
  $fGenericPackage1 ::
    RestClient.Package
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Package" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "packageName")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U(U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: RestClient.Package) ->
                 case x1 of wild { RestClient.Package g1 ->
                 g1
                   `cast`
                 (Trans
                      (Sym (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P <Data.Text.Internal.Text>_R <x>_P))
                      (Trans
                           (Sym (GHC.Generics.N:M1[0]
                                     <GHC.Generics.S>_P
                                     <'GHC.Generics.MetaSel
                                        ('GHC.Base.Just "packageName")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy>_P
                                     <GHC.Generics.K1 GHC.Generics.R Data.Text.Internal.Text>_R))
                           (Sym (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "Package" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "packageName")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1
                                           GHC.Generics.R
                                           Data.Text.Internal.Text)>_R)) <x>_N)) }) -}
e5507eb5850345f16e0000d9f3206626
  $fGenericPackage_$cfrom ::
    RestClient.Package -> GHC.Generics.Rep RestClient.Package x
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U(U,U,U))>m,
     Unfolding: InlineRule (0, True, True)
                RestClient.$fGenericPackage1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <RestClient.Package>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "Package"
                                       "RestClient"
                                       "use-haskell-0.1.0.0-F7dNwkeuN8BHaJ7CGjyfo9"
                                       'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "Package" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "packageName")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1
                                             GHC.Generics.R Data.Text.Internal.Text))>_R))
                          (Sub (Sym (RestClient.Rep_Package[0]))) <x>_N) -}
e5507eb5850345f16e0000d9f3206626
  $fGenericPackage_$cto ::
    GHC.Generics.Rep RestClient.Package x -> RestClient.Package
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, True)
                (\ @ x (ds :: GHC.Generics.Rep RestClient.Package x) ->
                 RestClient.Package
                   ds
                     `cast`
                   (Trans
                        (Trans
                             (Sub (RestClient.Rep_Package[0]))
                             (Trans
                                  (GHC.Generics.N:M1[0]
                                       <GHC.Generics.D>_P
                                       <'GHC.Generics.MetaData
                                          "Package"
                                          "RestClient"
                                          "use-haskell-0.1.0.0-F7dNwkeuN8BHaJ7CGjyfo9"
                                          'GHC.Types.False>_P
                                       <GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Package" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                          (GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "packageName")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1
                                                GHC.Generics.R Data.Text.Internal.Text))>_R)
                                  (Trans
                                       (GHC.Generics.N:M1[0]
                                            <GHC.Generics.C>_P
                                            <'GHC.Generics.MetaCons
                                               "Package" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                            <GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "packageName")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R Data.Text.Internal.Text)>_R)
                                       (GHC.Generics.N:M1[0]
                                            <GHC.Generics.S>_P
                                            <'GHC.Generics.MetaSel
                                               ('GHC.Base.Just "packageName")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy>_P
                                            <GHC.Generics.K1
                                               GHC.Generics.R Data.Text.Internal.Text>_R))) <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <Data.Text.Internal.Text>_R <x>_P))) -}
ffdf3129e7891a5e11f78e12ec90881c
  $fGenericUserDetailed ::
    GHC.Generics.Generic RestClient.UserDetailed
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ RestClient.UserDetailed
                  RestClient.$fGenericUserDetailed_$cfrom
                  RestClient.$fFromJSONUserDetailed_$cto -}
ffdf3129e7891a5e11f78e12ec90881c
  $fGenericUserDetailed1 ::
    RestClient.UserDetailed
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "UserDetailed" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "username")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R RestClient.Username)
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "userid")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "groups")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R [RestClient.Group])))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: RestClient.UserDetailed) ->
                 case x1 of wild { RestClient.UserDetailed g1 g2 g3 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "username")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R RestClient.Username))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "userid")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "groups")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R [RestClient.Group]))
                    @ x
                    g1
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <RestClient.Username>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "username")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1 GHC.Generics.R RestClient.Username>_R) <x>_N))
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "userid")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "groups")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R [RestClient.Group]))
                       @ x
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "userid")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R) <x>_N))
                       g3
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <[RestClient.Group]>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "groups")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R [RestClient.Group]>_R) <x>_N))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "UserDetailed" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "username")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R RestClient.Username)
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "userid")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "groups")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    [RestClient.Group]))>_R) <x>_N) }) -}
ffdf3129e7891a5e11f78e12ec90881c
  $fGenericUserDetailed_$cfrom ::
    RestClient.UserDetailed
    -> GHC.Generics.Rep RestClient.UserDetailed x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (0, True, True)
                RestClient.$fGenericUserDetailed1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <RestClient.UserDetailed>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "UserDetailed"
                                       "RestClient"
                                       "use-haskell-0.1.0.0-F7dNwkeuN8BHaJ7CGjyfo9"
                                       'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "UserDetailed" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "username")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R RestClient.Username)
                                        GHC.Generics.:*: (GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "userid")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Types.Int)
                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                             GHC.Generics.S
                                                                             ('GHC.Generics.MetaSel
                                                                                ('GHC.Base.Just
                                                                                   "groups")
                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                'GHC.Generics.NoSourceStrictness
                                                                                'GHC.Generics.DecidedLazy)
                                                                             (GHC.Generics.K1
                                                                                GHC.Generics.R
                                                                                [RestClient.Group])))>_R))
                          (Sub (Sym (RestClient.Rep_UserDetailed[0]))) <x>_N) -}
e5507eb5850345f16e0000d9f3206626
  $fShowPackage :: GHC.Show.Show RestClient.Package
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ RestClient.Package
                  RestClient.$fShowPackage_$cshowsPrec
                  RestClient.$fShowPackage_$cshow
                  RestClient.$fShowPackage_$cshowList -}
e5507eb5850345f16e0000d9f3206626
  $fShowPackage1 :: RestClient.Package -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: RestClient.Package) (w1 :: GHC.Base.String) ->
                 case w of ww { RestClient.Package ww1 ->
                 RestClient.$w$cshowsPrec 0# ww1 w1 }) -}
7d4e89c850d04488db2036df9eb069bf
  $fShowPackage2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
4b028ad0825fc0720eced7ca0acdde13
  $fShowPackage3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "packageName = "#) -}
00c118ec02c70bd1fabe24580717c09c
  $fShowPackage4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Package {"#) -}
e5507eb5850345f16e0000d9f3206626
  $fShowPackage_$cshow :: RestClient.Package -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U,U,U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: RestClient.Package) ->
                 RestClient.$fShowPackage_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
e5507eb5850345f16e0000d9f3206626
  $fShowPackage_$cshowList :: [RestClient.Package] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ RestClient.Package
                   RestClient.$fShowPackage1) -}
e5507eb5850345f16e0000d9f3206626
  $fShowPackage_$cshowsPrec ::
    GHC.Types.Int -> RestClient.Package -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U(U,U,U))><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: RestClient.Package)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { RestClient.Package ww3 ->
                 RestClient.$w$cshowsPrec ww1 ww3 w2 } }) -}
ffdf3129e7891a5e11f78e12ec90881c
  $fShowUserDetailed :: GHC.Show.Show RestClient.UserDetailed
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ RestClient.UserDetailed
                  RestClient.$fShowUserDetailed_$cshowsPrec
                  RestClient.$fShowUserDetailed_$cshow
                  RestClient.$fShowUserDetailed_$cshowList -}
ffdf3129e7891a5e11f78e12ec90881c
  $fShowUserDetailed1 :: RestClient.UserDetailed -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: RestClient.UserDetailed)
                   (w1 :: GHC.Base.String) ->
                 case w of ww { RestClient.UserDetailed ww1 ww2 ww3 ->
                 RestClient.$w$cshowsPrec1 0# ww1 ww2 ww3 w1 }) -}
ca9d4b3f55781c6b3ca3ef50d1879cbd
  $fShowUserDetailed2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "groups = "#) -}
47e31a6e73dca341c0b89d702bc13037
  $fShowUserDetailed3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "userid = "#) -}
74729017bff48de8ad723db45e327cba
  $fShowUserDetailed4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
26bd72f15ff12d0aecd1ef05fb91a26b
  $fShowUserDetailed5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "username = "#) -}
d19940b9b1145ffa8ee4876e7b741a30
  $fShowUserDetailed6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "UserDetailed {"#) -}
ffdf3129e7891a5e11f78e12ec90881c
  $fShowUserDetailed_$cshow ::
    RestClient.UserDetailed -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U,U,U),1*U(U),1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: RestClient.UserDetailed) ->
                 RestClient.$fShowUserDetailed_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
ffdf3129e7891a5e11f78e12ec90881c
  $fShowUserDetailed_$cshowList ::
    [RestClient.UserDetailed] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ RestClient.UserDetailed
                   RestClient.$fShowUserDetailed1) -}
ffdf3129e7891a5e11f78e12ec90881c
  $fShowUserDetailed_$cshowsPrec ::
    GHC.Types.Int -> RestClient.UserDetailed -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(U,U,U),1*U(U),1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: RestClient.UserDetailed)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { RestClient.UserDetailed ww3 ww4 ww5 ->
                 RestClient.$w$cshowsPrec1 ww1 ww3 ww4 ww5 w2 } }) -}
7516e401abca7dcadd4806e8af9c4fa2
  $fShowUserSummary :: GHC.Show.Show RestClient.UserSummary
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ RestClient.UserSummary
                  RestClient.$fShowUserSummary_$cshowsPrec
                  RestClient.$fShowUserSummary_$cshow
                  RestClient.$fShowUserSummary_$cshowList -}
7516e401abca7dcadd4806e8af9c4fa2
  $fShowUserSummary1 :: RestClient.UserSummary -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: RestClient.UserSummary)
                   (w1 :: GHC.Base.String) ->
                 case w of ww { RestClient.UserSummary ww1 ww2 ->
                 RestClient.$w$cshowsPrec2 0# ww1 ww2 w1 }) -}
b40468cb2bd6b34a1efcd8d3c59f42f7
  $fShowUserSummary2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "UserSummary {"#) -}
262c35d97e42d333254565ca1fbd3de2
  $fShowUserSummary3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "summaryUserid = "#) -}
c8717a52c8965fadbe4efc8f45ddd573
  $fShowUserSummary4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "summaryUsername = "#) -}
7516e401abca7dcadd4806e8af9c4fa2
  $fShowUserSummary_$cshow ::
    RestClient.UserSummary -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U,U,U),1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: RestClient.UserSummary) ->
                 RestClient.$fShowUserSummary_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
7516e401abca7dcadd4806e8af9c4fa2
  $fShowUserSummary_$cshowList ::
    [RestClient.UserSummary] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ RestClient.UserSummary
                   RestClient.$fShowUserSummary1) -}
7516e401abca7dcadd4806e8af9c4fa2
  $fShowUserSummary_$cshowsPrec ::
    GHC.Types.Int -> RestClient.UserSummary -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(U,U,U),1*U(U))><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: RestClient.UserSummary)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { RestClient.UserSummary ww3 ww4 ->
                 RestClient.$w$cshowsPrec2 ww1 ww3 ww4 w2 } }) -}
7b40d8554775aba1476006d934e81b39
  $s$fFromJSON[] ::
    Data.Aeson.Types.FromJSON.FromJSON [RestClient.Package]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [RestClient.Package]
                  (Data.Aeson.Types.FromJSON.$dmfromJSONKeyList_$cparseJSON
                     @ RestClient.Package
                     RestClient.$fFromJSONPackage)
                  (Data.Aeson.Types.FromJSON.$fFromJSONKey[]_$cparseJSONList
                     @ RestClient.Package
                     RestClient.$fFromJSONPackage) -}
5b8ac057a04c1e9115b03c3ae9711e5a
  $s$fFromJSON[]1 ::
    Data.Aeson.Types.FromJSON.FromJSON [RestClient.UserSummary]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [RestClient.UserSummary]
                  (Data.Aeson.Types.FromJSON.$dmfromJSONKeyList_$cparseJSON
                     @ RestClient.UserSummary
                     RestClient.$fFromJSONUserSummary)
                  (Data.Aeson.Types.FromJSON.$fFromJSONKey[]_$cparseJSONList
                     @ RestClient.UserSummary
                     RestClient.$fFromJSONUserSummary) -}
60aeea9992943ef1853ef18bd9e75390
  $s$fMimeUnrenderTYPEJSONa ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON [RestClient.Package]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ [RestClient.Package]
                  (Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cp1MimeUnrender
                     @ [RestClient.Package]
                     RestClient.$s$fMimeUnrenderTYPEJSONa_$dFromJSON)
                  RestClient.$s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender -}
057f98ac7039013bf571a79170533896
  $s$fMimeUnrenderTYPEJSONa1 ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON [RestClient.UserSummary]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ [RestClient.UserSummary]
                  (Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cp1MimeUnrender
                     @ [RestClient.UserSummary]
                     RestClient.$s$fMimeUnrenderTYPEJSONa_$dFromJSON1)
                  RestClient.$s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender1 -}
5c291e5c7ff6fad001586c60cedd6d6f
  $s$fMimeUnrenderTYPEJSONa2 ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON RestClient.UserDetailed
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ RestClient.UserDetailed
                  (Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cp1MimeUnrender
                     @ RestClient.UserDetailed
                     RestClient.$fFromJSONUserDetailed)
                  RestClient.$s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender2 -}
cb2acb7a1d4a5b3db591b637e09c3434
  $s$fMimeUnrenderTYPEJSONa_$dFromJSON ::
    Data.Aeson.Types.FromJSON.FromJSON [RestClient.Package]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) RestClient.$s$fFromJSON[] -}
955bd07c2f1cec30cd05aeddde5161ad
  $s$fMimeUnrenderTYPEJSONa_$dFromJSON1 ::
    Data.Aeson.Types.FromJSON.FromJSON [RestClient.UserSummary]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) RestClient.$s$fFromJSON[]1 -}
59601952e672cc8106226ffbeeb45444
  $s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.Either.Either GHC.Base.String [RestClient.Package]
  {- Arity: 2, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.eitherDecodeLenient
                   @ [RestClient.Package]
                   RestClient.$s$fMimeUnrenderTYPEJSONa_$dFromJSON
                   eta) -}
3b608bee4f512ffee13dde2cc4d7322f
  $s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender1 ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.Either.Either GHC.Base.String [RestClient.UserSummary]
  {- Arity: 2, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.eitherDecodeLenient
                   @ [RestClient.UserSummary]
                   RestClient.$s$fMimeUnrenderTYPEJSONa_$dFromJSON1
                   eta) -}
56fb693b41d2eb25b6803f6607790883
  $s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender2 ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.Either.Either GHC.Base.String RestClient.UserDetailed
  {- Arity: 2, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.eitherDecodeLenient
                   @ RestClient.UserDetailed
                   RestClient.$fFromJSONUserDetailed
                   eta) -}
40ba943e8ca8342e86a9e7355c83aa9e
  $sclient2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "/"#
                   RestClient.$sclient3) -}
f6684d592c5d94050d2c1cfa88fe6e98
  $sclient3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "packages"#) -}
44289bf67b9d8817d3f85b6f0d366a2f
  $sclient5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "/"#
                   RestClient.$sclient6) -}
b40dedbd47ee2956ffcd3e0aa20eb267
  $sclient6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "user"#) -}
48275ac1e8ab4cb5b67a4609f18cf375
  $sclient7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "/"#
                   RestClient.$sclient8) -}
bed1c435b1080ecafecc204374f6d73e
  $sclient8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "users"#) -}
60843d323c3bd3ba2559df9fe7f55cf3
  $tc'Package :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11945879547683315569##
                   12834526806807143979##
                   RestClient.$trModule
                   RestClient.$tc'Package1) -}
6cedf52e9b69b1d46738a8ac20a0a272
  $tc'Package1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Package"#) -}
505befe66cf38515e05d98aaa07203f1
  $tc'UserDetailed :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4254673345463681970##
                   1223470135567074341##
                   RestClient.$trModule
                   RestClient.$tc'UserDetailed1) -}
04aaeffdafe9f09384a27a7a2dda88df
  $tc'UserDetailed1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'UserDetailed"#) -}
6c66d5f6ca5ca1a1d9d49c051cd54136
  $tc'UserSummary :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   333752072456233068##
                   4372308071515511579##
                   RestClient.$trModule
                   RestClient.$tc'UserSummary1) -}
50342788cc6b563e00afa3ba277d3fa3
  $tc'UserSummary1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'UserSummary"#) -}
d23c7d7353b7a2211535febd958e33df
  $tcPackage :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8888805286254399757##
                   8308605166429717351##
                   RestClient.$trModule
                   RestClient.$tcPackage1) -}
2736b7876535efe406af489fe1817d11
  $tcPackage1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Package"#) -}
8e256717f155c3f658d49ea05c8d43e1
  $tcUserDetailed :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14207271200409937672##
                   11417149807140670600##
                   RestClient.$trModule
                   RestClient.$tcUserDetailed1) -}
85f38d5e937fd9243af65ccb2e8a44ad
  $tcUserDetailed1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "UserDetailed"#) -}
8b2c627a8137581eec9307ccd2304790
  $tcUserSummary :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4816751622098764654##
                   17652107816370417100##
                   RestClient.$trModule
                   RestClient.$tcUserSummary1) -}
1774600512d63ecf1576c31f414d23d5
  $tcUserSummary1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "UserSummary"#) -}
74ffa2112ed05ce2a7280789cb874701
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   RestClient.$trModule2
                   RestClient.$trModule1) -}
1e1cb885134c798db2e99afb29607c6e
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "RestClient"#) -}
699d41063abd2e564e7f456e360b7e45
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "use-haskell-0.1.0.0-F7dNwkeuN8BHaJ7CGjyfo9"#) -}
7629908e56887d8b46938f19101eef78
  $w$c/= ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,U><L,U><S,U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.ByteArray#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww2 ww5) of wild2 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case {__pkg_ccall text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR _hs_text_memcmp GHC.Prim.ByteArray#
                                                                                                         -> GHC.Prim.Word#
                                                                                                         -> GHC.Prim.ByteArray#
                                                                                                         -> GHC.Prim.Word#
                                                                                                         -> GHC.Prim.Word#
                                                                                                         -> GHC.Prim.State#
                                                                                                              GHC.Prim.RealWorld
                                                                                                         -> (# GHC.Prim.State#
                                                                                                                 GHC.Prim.RealWorld,
                                                                                                               GHC.Prim.Int# #)}
                             ww
                             (GHC.Prim.int2Word# ww1)
                             ww3
                             (GHC.Prim.int2Word# ww4)
                             (GHC.Prim.int2Word# ww2)
                             GHC.Prim.realWorld# of wild { (#,#) ds11 ds12 ->
                      case GHC.Prim.narrow32Int# ds12 of wild1 {
                        DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } } }) -}
127e879c03245ee17b4d961b2ef967c5
  $w$c== ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> [RestClient.Group]
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> [RestClient.Group]
    -> GHC.Types.Bool
  {- Arity: 10, HasNoCafRefs,
     Strictness: <L,U><L,U><S,U><L,1*U(U)><L,1*U><L,U><L,U><S,U><L,1*U(U)><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int)
                   (ww4 :: [RestClient.Group])
                   (ww5 :: GHC.Prim.ByteArray#)
                   (ww6 :: GHC.Prim.Int#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Types.Int)
                   (ww9 :: [RestClient.Group]) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww2 ww7) of wild2 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case {__pkg_ccall text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR _hs_text_memcmp GHC.Prim.ByteArray#
                                                                                                         -> GHC.Prim.Word#
                                                                                                         -> GHC.Prim.ByteArray#
                                                                                                         -> GHC.Prim.Word#
                                                                                                         -> GHC.Prim.Word#
                                                                                                         -> GHC.Prim.State#
                                                                                                              GHC.Prim.RealWorld
                                                                                                         -> (# GHC.Prim.State#
                                                                                                                 GHC.Prim.RealWorld,
                                                                                                               GHC.Prim.Int# #)}
                             ww
                             (GHC.Prim.int2Word# ww1)
                             ww5
                             (GHC.Prim.int2Word# ww6)
                             (GHC.Prim.int2Word# ww2)
                             GHC.Prim.realWorld# of wild { (#,#) ds11 ds12 ->
                      case GHC.Prim.narrow32Int# ds12 of wild1 {
                        DEFAULT -> GHC.Types.False
                        0#
                        -> case ww3 of wild3 { GHC.Types.I# x ->
                           case ww8 of wild4 { GHC.Types.I# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# x y) of wild5 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> GHC.Classes.$fEq[]_$c==
                                  @ Data.Text.Internal.Text
                                  Data.Text.$fEqText
                                  ww4
                                  ww9 } } } } } }) -}
bfa376824eeb20a06b6fcc813e799b60
  $w$c==1 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Bool
  {- Arity: 8, HasNoCafRefs,
     Strictness: <L,U><L,U><S,U><L,1*U(U)><L,U><L,U><S,U><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int)
                   (ww4 :: GHC.Prim.ByteArray#)
                   (ww5 :: GHC.Prim.Int#)
                   (ww6 :: GHC.Prim.Int#)
                   (ww7 :: GHC.Types.Int) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww2 ww6) of wild2 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case {__pkg_ccall text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR _hs_text_memcmp GHC.Prim.ByteArray#
                                                                                                         -> GHC.Prim.Word#
                                                                                                         -> GHC.Prim.ByteArray#
                                                                                                         -> GHC.Prim.Word#
                                                                                                         -> GHC.Prim.Word#
                                                                                                         -> GHC.Prim.State#
                                                                                                              GHC.Prim.RealWorld
                                                                                                         -> (# GHC.Prim.State#
                                                                                                                 GHC.Prim.RealWorld,
                                                                                                               GHC.Prim.Int# #)}
                             ww
                             (GHC.Prim.int2Word# ww1)
                             ww4
                             (GHC.Prim.int2Word# ww5)
                             (GHC.Prim.int2Word# ww2)
                             GHC.Prim.realWorld# of wild { (#,#) ds11 ds12 ->
                      case GHC.Prim.narrow32Int# ds12 of wild1 {
                        DEFAULT -> GHC.Types.False
                        0# -> GHC.Classes.eqInt ww3 ww7 } } }) -}
30c08f1f9d19cf97fc8eda5c49adb117
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Data.Text.Internal.Text -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><L,1*U(U,U,U)><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Data.Text.Internal.Text)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       RestClient.$fShowPackage4
                       (GHC.Base.++
                          @ GHC.Types.Char
                          RestClient.$fShowPackage3
                          (case Data.Text.Show.$w$cshowsPrec
                                  ww1
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     RestClient.$fShowPackage2
                                     x) of ww2 { (#,#) ww3 ww4 ->
                           GHC.Types.: @ GHC.Types.Char ww3 ww4 }))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w)) }) -}
777f4f9d80633a99f9661d5103366c10
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> RestClient.Username
    -> GHC.Types.Int
    -> [RestClient.Group]
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5, Strictness: <S,U><L,1*U(U,U,U)><L,1*U(U)><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: RestClient.Username)
                   (ww2 :: GHC.Types.Int)
                   (ww3 :: [RestClient.Group])
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       RestClient.$fShowUserDetailed6
                       (GHC.Base.++
                          @ GHC.Types.Char
                          RestClient.$fShowUserDetailed5
                          (case Data.Text.Show.$w$cshowsPrec
                                  ww1
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     RestClient.$fShowUserDetailed4
                                     (GHC.Base.++
                                        @ GHC.Types.Char
                                        RestClient.$fShowUserDetailed3
                                        (case ww2 of ww4 { GHC.Types.I# ww5 ->
                                         case GHC.Show.$wshowSignedInt
                                                0#
                                                ww5
                                                (GHC.Base.++
                                                   @ GHC.Types.Char
                                                   RestClient.$fShowUserDetailed4
                                                   (GHC.Base.++
                                                      @ GHC.Types.Char
                                                      RestClient.$fShowUserDetailed2
                                                      (let {
                                                         s :: GHC.Base.String
                                                         = GHC.Base.++
                                                             @ GHC.Types.Char
                                                             RestClient.$fShowPackage2
                                                             x
                                                       } in
                                                       case ww3 of wild {
                                                         []
                                                         -> GHC.CString.unpackAppendCString# "[]"# s
                                                         : x1 xs
                                                         -> GHC.Types.:
                                                              @ GHC.Types.Char
                                                              GHC.Show.showList__2
                                                              (Data.Text.Show.$fShowText1
                                                                 x1
                                                                 (let {
                                                                    lvl27 :: [GHC.Types.Char]
                                                                    = GHC.Types.:
                                                                        @ GHC.Types.Char
                                                                        GHC.Show.showList__1
                                                                        s
                                                                  } in
                                                                  letrec {
                                                                    showl :: [Data.Text.Internal.Text]
                                                                             -> GHC.Base.String
                                                                      {- Arity: 1,
                                                                         Strictness: <S,1*U> -}
                                                                    = \ (ds2 :: [Data.Text.Internal.Text]) ->
                                                                      case ds2 of wild1 {
                                                                        [] -> lvl27
                                                                        : y ys
                                                                        -> GHC.Types.:
                                                                             @ GHC.Types.Char
                                                                             GHC.Show.shows5
                                                                             (Data.Text.Show.$fShowText1
                                                                                y
                                                                                (showl ys)) }
                                                                  } in
                                                                  showl
                                                                    xs)) }))) of ww6 { (#,#) ww7 ww8 ->
                                         GHC.Types.:
                                           @ GHC.Types.Char
                                           ww7
                                           ww8 } }))) of ww4 { (#,#) ww5 ww6 ->
                           GHC.Types.: @ GHC.Types.Char ww5 ww6 }))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w)) }) -}
12cb13353d0794b4f70cd195f371a3a8
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> RestClient.Username
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U(U,U,U)><L,1*U(U)><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: RestClient.Username)
                   (ww2 :: GHC.Types.Int)
                   (w :: GHC.Base.String) ->
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                     {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       RestClient.$fShowUserSummary4
                       (case Data.Text.Show.$w$cshowsPrec
                               ww1
                               (GHC.Base.++
                                  @ GHC.Types.Char
                                  RestClient.$fShowUserDetailed4
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     RestClient.$fShowUserSummary3
                                     (case ww2 of ww3 { GHC.Types.I# ww4 ->
                                      case GHC.Show.$wshowSignedInt
                                             0#
                                             ww4
                                             (GHC.Base.++
                                                @ GHC.Types.Char
                                                RestClient.$fShowPackage2
                                                x) of ww5 { (#,#) ww6 ww7 ->
                                      GHC.Types.:
                                        @ GHC.Types.Char
                                        ww6
                                        ww7 } }))) of ww3 { (#,#) ww4 ww5 ->
                        GHC.Types.: @ GHC.Types.Char ww4 ww5 })
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> GHC.Base.++ @ GHC.Types.Char RestClient.$fShowUserSummary2 (g w)
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (GHC.Base.++
                           @ GHC.Types.Char
                           RestClient.$fShowUserSummary2
                           (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w))) }) -}
e80cf33a3754ed5016035eaf3b7be620
  $w$dHasClient1 ::
    Data.Proxy.Proxy
      (Servant.API.Verbs.Verb
         'Network.HTTP.Types.Method.GET
         200
         '[Servant.API.ContentTypes.JSON]
         RestClient.UserDetailed)
    -> Servant.Common.Req.Req
    -> Servant.Client.Client
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.GET
            200
            '[Servant.API.ContentTypes.JSON]
            RestClient.UserDetailed)
  {- Arity: 2, Strictness: <S,1*H><L,1*U(U,U,U,A,U)>, Inline: [0],
     Unfolding: (\ (w :: Data.Proxy.Proxy
                           (Servant.API.Verbs.Verb
                              'Network.HTTP.Types.Method.GET
                              200
                              '[Servant.API.ContentTypes.JSON]
                              RestClient.UserDetailed))
                   (w1 :: Servant.Common.Req.Req) ->
                 let {
                   eta1 :: Servant.Common.Req.ClientM
                             ([Network.HTTP.Types.Header.Header], RestClient.UserDetailed)
                   = Servant.Common.Req.performRequestCT
                       @ Servant.API.ContentTypes.JSON
                       @ RestClient.UserDetailed
                       RestClient.$s$fMimeUnrenderTYPEJSONa2
                       (Data.Proxy.Proxy @ GHC.Types.* @ Servant.API.ContentTypes.JSON)
                       Network.HTTP.Types.Method.methodGet
                       w1
                 } in
                 (\ (eta2 :: Servant.Common.Req.ClientEnv)
                    (eta3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (eta1
                          `cast`
                        (Trans
                             (Servant.Common.Req.N:ClientM[0] <([Network.HTTP.Types.Header.Header],
                                                                RestClient.UserDetailed)>_N)
                             (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <Servant.Common.Req.ClientEnv>_R
                                  <Control.Monad.Trans.Except.ExceptT
                                     Servant.Common.Req.ServantError GHC.Types.IO>_R
                                  <([Network.HTTP.Types.Header.Header],
                                    RestClient.UserDetailed)>_N))
                          eta2)
                         `cast`
                       (Trans
                            (Control.Monad.Trans.Except.N:ExceptT[0]
                                 <Servant.Common.Req.ServantError>_N
                                 <GHC.Types.IO>_R
                                 <([Network.HTTP.Types.Header.Header], RestClient.UserDetailed)>_N)
                            (GHC.Types.N:IO[0]
                                 <Data.Either.Either
                                    Servant.Common.Req.ServantError
                                    ([Network.HTTP.Types.Header.Header],
                                     RestClient.UserDetailed)>_R))
                         eta3 of ds { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild {
                       Data.Either.Left x
                       -> Data.Either.Left
                            @ Servant.Common.Req.ServantError
                            @ RestClient.UserDetailed
                            x
                       Data.Either.Right y
                       -> Data.Either.Right
                            @ Servant.Common.Req.ServantError
                            @ RestClient.UserDetailed
                            (Data.Tuple.snd
                               @ [Network.HTTP.Types.Header.Header]
                               @ RestClient.UserDetailed
                               y) } #) })
                   `cast`
                 (Trans
                      (<Servant.Common.Req.ClientEnv>_R
                       ->_R Trans
                                (Sym (GHC.Types.N:IO[0]
                                          <Data.Either.Either
                                             Servant.Common.Req.ServantError
                                             RestClient.UserDetailed>_R))
                                (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                          <Servant.Common.Req.ServantError>_N
                                          <GHC.Types.IO>_R
                                          <RestClient.UserDetailed>_N)))
                      (Trans
                           (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                     <*>_N
                                     <Servant.Common.Req.ClientEnv>_R
                                     <Control.Monad.Trans.Except.ExceptT
                                        Servant.Common.Req.ServantError GHC.Types.IO>_R
                                     <RestClient.UserDetailed>_N))
                           (Trans
                                (Sym (Servant.Common.Req.N:ClientM[0]) <RestClient.UserDetailed>_N)
                                (Sub (Sym (Servant.Client.D:R:ClientTYPEVerb2[0]
                                               <Network.HTTP.Types.Method.StdMethod>_N
                                               <RestClient.UserDetailed>_N
                                               <'[Servant.API.ContentTypes.JSON]>_N
                                               <200>_N
                                               <'Network.HTTP.Types.Method.GET>_N))))))) -}
3b3a5d1badf659cf2937f40d7fcf4c70
  type Group = Data.Text.Internal.Text
7555beaf03d8951bb252866f965a7d2e
  type HackageAPI =
    ("users"
     Servant.API.Sub.:> Servant.API.Verbs.Get
                          '[Servant.API.ContentTypes.JSON] [RestClient.UserSummary])
    Servant.API.Alternative.:<|> (("user"
                                   Servant.API.Sub.:> (Servant.API.Capture.Capture
                                                         "username" RestClient.Username
                                                       Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                            '[Servant.API.ContentTypes.JSON]
                                                                            RestClient.UserDetailed))
                                  Servant.API.Alternative.:<|> ("packages"
                                                                Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                                     '[Servant.API.ContentTypes.JSON]
                                                                                     [RestClient.Package]))
e5507eb5850345f16e0000d9f3206626
  data Package = Package {packageName :: Data.Text.Internal.Text}
e5507eb5850345f16e0000d9f3206626
  axiom Rep_Package::
      GHC.Generics.Rep RestClient.Package
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "Package"
               "RestClient"
               "use-haskell-0.1.0.0-F7dNwkeuN8BHaJ7CGjyfo9"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Package" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "packageName")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 Data.Text.Internal.Text)))
ffdf3129e7891a5e11f78e12ec90881c
  axiom Rep_UserDetailed::
      GHC.Generics.Rep RestClient.UserDetailed
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "UserDetailed"
               "RestClient"
               "use-haskell-0.1.0.0-F7dNwkeuN8BHaJ7CGjyfo9"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "UserDetailed" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "username")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 RestClient.Username)
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "userid")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Types.Int)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "groups")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 [RestClient.Group]))))
ffdf3129e7891a5e11f78e12ec90881c
  data UserDetailed
    = UserDetailed {username :: RestClient.Username,
                    userid :: GHC.Types.Int,
                    groups :: [RestClient.Group]}
7516e401abca7dcadd4806e8af9c4fa2
  data UserSummary
    = UserSummary {summaryUsername :: RestClient.Username,
                   summaryUserid :: GHC.Types.Int}
be1c36557b0f5dafeb91e93638aa3e6d
  type Username = Data.Text.Internal.Text
d0e2762747b89c15e848e5664629617e
  getPackages :: Servant.Common.Req.ClientM [RestClient.Package]
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                RestClient.getPackages1
                  `cast`
                (Trans
                     (<Servant.Common.Req.ClientEnv>_R
                      ->_R Trans
                               (Sym (GHC.Types.N:IO[0]
                                         <Data.Either.Either
                                            Servant.Common.Req.ServantError
                                            [RestClient.Package]>_R))
                               (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                         <Servant.Common.Req.ServantError>_N
                                         <GHC.Types.IO>_R
                                         <[RestClient.Package]>_N)))
                     (Trans
                          (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                    <*>_N
                                    <Servant.Common.Req.ClientEnv>_R
                                    <Control.Monad.Trans.Except.ExceptT
                                       Servant.Common.Req.ServantError GHC.Types.IO>_R
                                    <[RestClient.Package]>_N))
                          (Sym (Servant.Common.Req.N:ClientM[0]) <[RestClient.Package]>_N))) -}
cb20e2b9e0d10d7886b01ef33b73fda1
  getPackages1 ::
    Servant.Common.Req.ClientEnv
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Common.Req.ServantError [RestClient.Package] #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta2 :: Servant.Common.Req.ClientEnv)
                   (eta3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (RestClient.getPackages_eta1
                         `cast`
                       (Trans
                            (Servant.Common.Req.N:ClientM[0] <([Network.HTTP.Types.Header.Header],
                                                               [RestClient.Package])>_N)
                            (Control.Monad.Trans.Reader.N:ReaderT[0]
                                 <*>_N
                                 <Servant.Common.Req.ClientEnv>_R
                                 <Control.Monad.Trans.Except.ExceptT
                                    Servant.Common.Req.ServantError GHC.Types.IO>_R
                                 <([Network.HTTP.Types.Header.Header], [RestClient.Package])>_N))
                         eta2)
                        `cast`
                      (Trans
                           (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Servant.Common.Req.ServantError>_N
                                <GHC.Types.IO>_R
                                <([Network.HTTP.Types.Header.Header], [RestClient.Package])>_N)
                           (GHC.Types.N:IO[0]
                                <Data.Either.Either
                                   Servant.Common.Req.ServantError
                                   ([Network.HTTP.Types.Header.Header], [RestClient.Package])>_R))
                        eta3 of ds { (#,#) ipv ipv1 ->
                 (# ipv,
                    case ipv1 of wild {
                      Data.Either.Left x
                      -> Data.Either.Left
                           @ Servant.Common.Req.ServantError
                           @ [RestClient.Package]
                           x
                      Data.Either.Right y
                      -> Data.Either.Right
                           @ Servant.Common.Req.ServantError
                           @ [RestClient.Package]
                           (Data.Tuple.snd
                              @ [Network.HTTP.Types.Header.Header]
                              @ [RestClient.Package]
                              y) } #) }) -}
5867923efca3dc202e996bd02ba91b04
  getPackages2 :: Servant.Common.Req.Req
  {- Unfolding: (Servant.Common.Req.Req
                   RestClient.getPackages3
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text,
                         GHC.Base.Maybe Data.Text.Internal.Text))
                   (GHC.Base.Nothing
                      @ (Data.ByteString.Lazy.Internal.ByteString,
                         Network.HTTP.Media.MediaType.Internal.MediaType))
                   (GHC.Types.[] @ Network.HTTP.Media.MediaType.Internal.MediaType)
                   (GHC.Types.[] @ (GHC.Base.String, Data.Text.Internal.Text))) -}
922c5322fb7dd3f9fcf1190dc1ced57a
  getPackages3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.Types.[] @ GHC.Types.Char)
                   RestClient.$sclient2) -}
809ade91d985f7aa95cbd0b83196ab94
  getPackages_eta1 ::
    Servant.Common.Req.ClientM
      ([Network.HTTP.Types.Header.Header], [RestClient.Package])
  {- Unfolding: (Servant.Common.Req.performRequestCT
                   @ Servant.API.ContentTypes.JSON
                   @ [RestClient.Package]
                   RestClient.$s$fMimeUnrenderTYPEJSONa
                   (Data.Proxy.Proxy @ GHC.Types.* @ Servant.API.ContentTypes.JSON)
                   Network.HTTP.Types.Method.methodGet
                   RestClient.getPackages2) -}
a650907792acb413c7686721e1646c0e
  getUser ::
    RestClient.Username
    -> Servant.Common.Req.ClientM RestClient.UserDetailed
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                RestClient.getUser1
                  `cast`
                (<Data.Text.Internal.Text>_R
                 ->_R Sub (Servant.Client.D:R:ClientTYPEVerb2[0]
                               <Network.HTTP.Types.Method.StdMethod>_N
                               <RestClient.UserDetailed>_N
                               <'[Servant.API.ContentTypes.JSON]>_N
                               <200>_N
                               <'Network.HTTP.Types.Method.GET>_N)) -}
04942188f264ba4a5cc10ef1e9f10ea4
  getUser1 ::
    Data.Text.Internal.Text
    -> Servant.Client.Client
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.GET
            200
            '[Servant.API.ContentTypes.JSON]
            RestClient.UserDetailed)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (w5 :: Data.Text.Internal.Text) ->
                 Servant.Client.$w$cclientWithRoute1
                   @ *
                   @ "username"
                   @ Data.Text.Internal.Text
                   @ (Servant.API.Verbs.Verb
                        'Network.HTTP.Types.Method.GET
                        200
                        '[Servant.API.ContentTypes.JSON]
                        RestClient.UserDetailed)
                   Web.Internal.HttpApiData.$fToHttpApiDataText0
                   RestClient.getUser4
                     `cast`
                   (Sym (Servant.Client.N:HasClient[0]
                             <*>_N
                             <Servant.API.Verbs.Verb
                                'Network.HTTP.Types.Method.GET
                                200
                                '[Servant.API.ContentTypes.JSON]
                                RestClient.UserDetailed>_N))
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Capture.Capture "username" Data.Text.Internal.Text
                         Servant.API.Sub.:> Servant.API.Verbs.Verb
                                              'Network.HTTP.Types.Method.GET
                                              200
                                              '[Servant.API.ContentTypes.JSON]
                                              RestClient.UserDetailed))
                   RestClient.getUser2
                   w5) -}
7df320e8bce6ecb7045619ec0f0bf48d
  getUser2 :: Servant.Common.Req.Req
  {- Strictness: m,
     Unfolding: (Servant.Common.Req.Req
                   RestClient.getUser3
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text,
                         GHC.Base.Maybe Data.Text.Internal.Text))
                   (GHC.Base.Nothing
                      @ (Data.ByteString.Lazy.Internal.ByteString,
                         Network.HTTP.Media.MediaType.Internal.MediaType))
                   (GHC.Types.[] @ Network.HTTP.Media.MediaType.Internal.MediaType)
                   (GHC.Types.[] @ (GHC.Base.String, Data.Text.Internal.Text))) -}
075df3954216500a8170764ae34afbf6
  getUser3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.Types.[] @ GHC.Types.Char)
                   RestClient.$sclient5) -}
8af1d8106f9c76f3f636cd3b19262fb7
  getUser4 ::
    Data.Proxy.Proxy
      (Servant.API.Verbs.Verb
         'Network.HTTP.Types.Method.GET
         200
         '[Servant.API.ContentTypes.JSON]
         RestClient.UserDetailed)
    -> Servant.Common.Req.Req
    -> Servant.Client.Client
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.GET
            200
            '[Servant.API.ContentTypes.JSON]
            RestClient.UserDetailed)
  {- Arity: 2, Strictness: <S,1*H><L,1*U(U,U,U,A,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Data.Proxy.Proxy
                           (Servant.API.Verbs.Verb
                              'Network.HTTP.Types.Method.GET
                              200
                              '[Servant.API.ContentTypes.JSON]
                              RestClient.UserDetailed))
                   (w1 :: Servant.Common.Req.Req) ->
                 case w of w2 { Data.Proxy.Proxy ->
                 RestClient.$w$dHasClient1
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.GET
                           200
                           '[Servant.API.ContentTypes.JSON]
                           RestClient.UserDetailed))
                   w1 }) -}
898290322402ae874ce338259c6948d0
  getUsers :: Servant.Common.Req.ClientM [RestClient.UserSummary]
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                RestClient.getUsers1
                  `cast`
                (Trans
                     (<Servant.Common.Req.ClientEnv>_R
                      ->_R Trans
                               (Sym (GHC.Types.N:IO[0]
                                         <Data.Either.Either
                                            Servant.Common.Req.ServantError
                                            [RestClient.UserSummary]>_R))
                               (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                         <Servant.Common.Req.ServantError>_N
                                         <GHC.Types.IO>_R
                                         <[RestClient.UserSummary]>_N)))
                     (Trans
                          (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                    <*>_N
                                    <Servant.Common.Req.ClientEnv>_R
                                    <Control.Monad.Trans.Except.ExceptT
                                       Servant.Common.Req.ServantError GHC.Types.IO>_R
                                    <[RestClient.UserSummary]>_N))
                          (Sym (Servant.Common.Req.N:ClientM[0]) <[RestClient.UserSummary]>_N))) -}
64864c1c9efc57dfdd910ab3a35a466b
  getUsers1 ::
    Servant.Common.Req.ClientEnv
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Common.Req.ServantError [RestClient.UserSummary] #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta2 :: Servant.Common.Req.ClientEnv)
                   (eta3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (RestClient.getUsers_eta1
                         `cast`
                       (Trans
                            (Servant.Common.Req.N:ClientM[0] <([Network.HTTP.Types.Header.Header],
                                                               [RestClient.UserSummary])>_N)
                            (Control.Monad.Trans.Reader.N:ReaderT[0]
                                 <*>_N
                                 <Servant.Common.Req.ClientEnv>_R
                                 <Control.Monad.Trans.Except.ExceptT
                                    Servant.Common.Req.ServantError GHC.Types.IO>_R
                                 <([Network.HTTP.Types.Header.Header],
                                   [RestClient.UserSummary])>_N))
                         eta2)
                        `cast`
                      (Trans
                           (Control.Monad.Trans.Except.N:ExceptT[0]
                                <Servant.Common.Req.ServantError>_N
                                <GHC.Types.IO>_R
                                <([Network.HTTP.Types.Header.Header], [RestClient.UserSummary])>_N)
                           (GHC.Types.N:IO[0]
                                <Data.Either.Either
                                   Servant.Common.Req.ServantError
                                   ([Network.HTTP.Types.Header.Header],
                                    [RestClient.UserSummary])>_R))
                        eta3 of ds { (#,#) ipv ipv1 ->
                 (# ipv,
                    case ipv1 of wild {
                      Data.Either.Left x
                      -> Data.Either.Left
                           @ Servant.Common.Req.ServantError
                           @ [RestClient.UserSummary]
                           x
                      Data.Either.Right y
                      -> Data.Either.Right
                           @ Servant.Common.Req.ServantError
                           @ [RestClient.UserSummary]
                           (Data.Tuple.snd
                              @ [Network.HTTP.Types.Header.Header]
                              @ [RestClient.UserSummary]
                              y) } #) }) -}
314c81dbe041f1881fdec05fe7ab9f13
  getUsers2 :: Servant.Common.Req.Req
  {- Unfolding: (Servant.Common.Req.Req
                   RestClient.getUsers3
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text,
                         GHC.Base.Maybe Data.Text.Internal.Text))
                   (GHC.Base.Nothing
                      @ (Data.ByteString.Lazy.Internal.ByteString,
                         Network.HTTP.Media.MediaType.Internal.MediaType))
                   (GHC.Types.[] @ Network.HTTP.Media.MediaType.Internal.MediaType)
                   (GHC.Types.[] @ (GHC.Base.String, Data.Text.Internal.Text))) -}
01d5d91b88a036c3edaa44ac5abe000c
  getUsers3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.Types.[] @ GHC.Types.Char)
                   RestClient.$sclient7) -}
98e27c3d6a7b609e61e9e26a61d0cfcd
  getUsers_eta1 ::
    Servant.Common.Req.ClientM
      ([Network.HTTP.Types.Header.Header], [RestClient.UserSummary])
  {- Unfolding: (Servant.Common.Req.performRequestCT
                   @ Servant.API.ContentTypes.JSON
                   @ [RestClient.UserSummary]
                   RestClient.$s$fMimeUnrenderTYPEJSONa1
                   (Data.Proxy.Proxy @ GHC.Types.* @ Servant.API.ContentTypes.JSON)
                   Network.HTTP.Types.Method.methodGet
                   RestClient.getUsers2) -}
2ce96326215071ee8a9b72ed0d88bdb6
  groups :: RestClient.UserDetailed -> [RestClient.Group]
  RecSel Left RestClient.UserDetailed
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: RestClient.UserDetailed) ->
                 case ds of wild { RestClient.UserDetailed ds1 ds2 ds3 -> ds3 }) -}
a967eaf537e7cce4bd4485642e9de53a
  hackageAPI :: Data.Proxy.Proxy RestClient.HackageAPI
  {- HasNoCafRefs,
     Unfolding: InlineRule (0, True, True)
                (Data.Proxy.Proxy @ * @ RestClient.HackageAPI) -}
8c7bb0fe611bd8614fce31c30413936a
  packageName :: RestClient.Package -> Data.Text.Internal.Text
  RecSel Left RestClient.Package
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U(U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: RestClient.Package) ->
                 case ds of wild { RestClient.Package ds1 -> ds1 }) -}
c1200ebe237d69a07ace36aa0fd900a5
  summaryUserid :: RestClient.UserSummary -> GHC.Types.Int
  RecSel Left RestClient.UserSummary
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: RestClient.UserSummary) ->
                 case ds of wild { RestClient.UserSummary ds1 ds2 -> ds2 }) -}
1af52fd4c75d11003363f53082e97e6a
  summaryUsername :: RestClient.UserSummary -> RestClient.Username
  RecSel Left RestClient.UserSummary
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U(U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: RestClient.UserSummary) ->
                 case ds of wild { RestClient.UserSummary ds1 ds2 -> ds1 }) -}
b3ad8ca5969f391ff02828781e803fac
  userid :: RestClient.UserDetailed -> GHC.Types.Int
  RecSel Left RestClient.UserDetailed
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: RestClient.UserDetailed) ->
                 case ds of wild { RestClient.UserDetailed ds1 ds2 ds3 -> ds2 }) -}
e6d2b501a2810576dc1b0666a2912f55
  username :: RestClient.UserDetailed -> RestClient.Username
  RecSel Left RestClient.UserDetailed
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U(U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: RestClient.UserDetailed) ->
                 case ds of wild { RestClient.UserDetailed ds1 ds2 ds3 -> ds1 }) -}
instance GHC.Classes.Eq [RestClient.Package]
  = RestClient.$fEqPackage
instance GHC.Classes.Eq [RestClient.UserDetailed]
  = RestClient.$fEqUserDetailed
instance GHC.Classes.Eq [RestClient.UserSummary]
  = RestClient.$fEqUserSummary
instance Data.Aeson.Types.FromJSON.FromJSON [RestClient.Package]
  = RestClient.$fFromJSONPackage
instance Data.Aeson.Types.FromJSON.FromJSON [RestClient.UserDetailed]
  = RestClient.$fFromJSONUserDetailed
instance Data.Aeson.Types.FromJSON.FromJSON [RestClient.UserSummary]
  = RestClient.$fFromJSONUserSummary
instance GHC.Generics.Generic [RestClient.Package]
  = RestClient.$fGenericPackage
instance GHC.Generics.Generic [RestClient.UserDetailed]
  = RestClient.$fGenericUserDetailed
instance GHC.Show.Show [RestClient.Package]
  = RestClient.$fShowPackage
instance GHC.Show.Show [RestClient.UserDetailed]
  = RestClient.$fShowUserDetailed
instance GHC.Show.Show [RestClient.UserSummary]
  = RestClient.$fShowUserSummary
family instance GHC.Generics.Rep [RestClient.Package]
  = RestClient.Rep_Package
family instance GHC.Generics.Rep [RestClient.UserDetailed]
  = RestClient.Rep_UserDetailed
"SPEC/RestClient $fFromJSON[] @ Package" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                          RestClient.Package)
  Data.Aeson.Types.FromJSON.$fFromJSON[] @ RestClient.Package
                                         $dFromJSON
  = RestClient.$s$fFromJSON[]
"SPEC/RestClient $fFromJSON[] @ Text" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                       Data.Text.Internal.Text)
  Data.Aeson.Types.FromJSON.$fFromJSON[] @ Data.Text.Internal.Text
                                         $dFromJSON
  = RestClient.$fFromJSONUserDetailed_$s$fFromJSON[]
"SPEC/RestClient $fFromJSON[] @ UserSummary" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                              RestClient.UserSummary)
  Data.Aeson.Types.FromJSON.$fFromJSON[] @ RestClient.UserSummary
                                         $dFromJSON
  = RestClient.$s$fFromJSON[]1
"SPEC/RestClient $fMimeUnrenderTYPEJSONa @ UserDetailed" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                          RestClient.UserDetailed)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa @ RestClient.UserDetailed
                                                   $dFromJSON
  = RestClient.$s$fMimeUnrenderTYPEJSONa2
"SPEC/RestClient $fMimeUnrenderTYPEJSONa @ [Package]" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                       [RestClient.Package])
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa @ [RestClient.Package]
                                                   $dFromJSON
  = RestClient.$s$fMimeUnrenderTYPEJSONa
"SPEC/RestClient $fMimeUnrenderTYPEJSONa @ [UserSummary]" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                           [RestClient.UserSummary])
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa @ [RestClient.UserSummary]
                                                   $dFromJSON
  = RestClient.$s$fMimeUnrenderTYPEJSONa1
"SPEC/RestClient $fMimeUnrenderTYPEJSONa_$cmimeUnrender @ UserDetailed" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                                         RestClient.UserDetailed)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cmimeUnrender @ RestClient.UserDetailed
                                                                  $dFromJSON
  = RestClient.$s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender2
"SPEC/RestClient $fMimeUnrenderTYPEJSONa_$cmimeUnrender @ [Package]" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                                      [RestClient.Package])
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cmimeUnrender @ [RestClient.Package]
                                                                  $dFromJSON
  = RestClient.$s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender
"SPEC/RestClient $fMimeUnrenderTYPEJSONa_$cmimeUnrender @ [UserSummary]" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                                          [RestClient.UserSummary])
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cmimeUnrender @ [RestClient.UserSummary]
                                                                  $dFromJSON
  = RestClient.$s$fMimeUnrenderTYPEJSONa_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender1
"SPEC/RestClient $fSelectorMetaMetaSel @ ('Just
                                           "groups") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                                                                                                   ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                  'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                   ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                  'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                   ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                 ('GHC.Base.Just
                                                                                                                                                                                                    "groups"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "groups")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = RestClient.$fFromJSONUserDetailed_$s$fSelectorMetaMetaSel
"SPEC/RestClient $fSelectorMetaMetaSel @ ('Just
                                           "packageName") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                                                                        ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                       'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                        ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                       'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                        ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                      ('GHC.Base.Just
                                                                                                                                                                                                         "packageName"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "packageName")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = RestClient.$fFromJSONPackage_$s$fSelectorMetaMetaSel
"SPEC/RestClient $fSelectorMetaMetaSel @ ('Just
                                           "userid") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                                                                                                   ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                  'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                   ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                  'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                   ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                 ('GHC.Base.Just
                                                                                                                                                                                                    "userid"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "userid")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = RestClient.$fFromJSONUserDetailed_$s$fSelectorMetaMetaSel1
"SPEC/RestClient $fSelectorMetaMetaSel @ ('Just
                                           "username") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                                                                     ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                    'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                     ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                    'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                     ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                   ('GHC.Base.Just
                                                                                                                                                                                                      "username"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "username")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = RestClient.$fFromJSONUserDetailed_$s$fSelectorMetaMetaSel2
"SPEC/RestClient $fSelectorMetaMetaSel_$cselName @ ('Just
                                                     "groups") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                       ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                      'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                       ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                      'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                       ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                     ('GHC.Base.Just
                                                                                                                                                                                                                        "groups"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "groups")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = RestClient.$fFromJSONUserDetailed_$s$fSelectorMetaMetaSel_$cselName
"SPEC/RestClient $fSelectorMetaMetaSel_$cselName @ ('Just
                                                     "packageName") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                           'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                            ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                           'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                            ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                           'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                            ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                          ('GHC.Base.Just
                                                                                                                                                                                                                             "packageName"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "packageName")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = RestClient.$fFromJSONPackage_$s$fSelectorMetaMetaSel_$cselName
"SPEC/RestClient $fSelectorMetaMetaSel_$cselName @ ('Just
                                                     "userid") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                       ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                      'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                       ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                      'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                       ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                     ('GHC.Base.Just
                                                                                                                                                                                                                        "userid"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "userid")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = RestClient.$fFromJSONUserDetailed_$s$fSelectorMetaMetaSel_$cselName1
"SPEC/RestClient $fSelectorMetaMetaSel_$cselName @ ('Just
                                                     "username") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                         ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                        'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                         ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                        'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                         ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                       ('GHC.Base.Just
                                                                                                                                                                                                                          "username"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "username")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = RestClient.$fFromJSONUserDetailed_$s$fSelectorMetaMetaSel_$cselName2
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

